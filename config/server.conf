# Custom HTTP/HTTPS Server Configuration
# Nginx-like configuration format

# Global settings
worker_processes auto;
max_connections 1024;
keepalive_timeout 65;
client_timeout 30;

# Enable gzip compression
gzip on;

# SSL redirect (redirect HTTP to HTTPS)
ssl_redirect off;

# Logging
access_log /var/log/httpserver/access.log;
error_log /var/log/httpserver/error.log;

# HTTP Server Block
server {
    listen 8080;
    server_name localhost;
    root /var/www/html;
    
    # Security headers
    add_header X-Content-Type-Options nosniff;
    add_header X-Frame-Options DENY;
    add_header X-XSS-Protection "1; mode=block";
    
    # Static file serving
    location / {
        try_files $uri $uri/ /index.html;
        expires 1h;
    }
    
    # API proxy
    location /api/ {
        proxy_pass http://backend;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
    
    # Static assets with long cache
    location /static/ {
        expires 1y;
        add_header Cache-Control "public, immutable";
    }
}

# HTTPS Server Block
server {
    listen 8443 ssl;
    server_name localhost;
    root /var/www/html;
    
    # SSL Configuration
    ssl_certificate certs/server.crt;
    ssl_certificate_key certs/server.key;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-SHA384:ECDHE-RSA-AES128-SHA256;
    ssl_prefer_server_ciphers on;
    
    # HSTS header
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    
    # Security headers
    add_header X-Content-Type-Options nosniff;
    add_header X-Frame-Options DENY;
    add_header X-XSS-Protection "1; mode=block";
    add_header Content-Security-Policy "default-src 'self'";
    
    # Static file serving
    location / {
        try_files $uri $uri/ /index.html;
        expires 1h;
    }
    
    # Secure API proxy
    location /api/ {
        proxy_pass https://secure-backend;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto https;
        proxy_ssl_verify off;
    }
}

# Upstream definitions for load balancing
upstream backend {
    server 127.0.0.1:3000 weight=3;
    server 127.0.0.1:3001 weight=2;
    server 127.0.0.1:3002 weight=1 backup;
}

upstream secure-backend {
    server 127.0.0.1:3443 weight=1;
    server 127.0.0.1:3444 weight=1;
    
    # Health check settings
    check interval=30s;
    check_http_send "GET /health HTTP/1.0\r\n\r\n";
    check_http_expect_alive http_2xx http_3xx;
}

# Rate limiting
limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
limit_req_zone $binary_remote_addr zone=login:10m rate=1r/s;

# Apply rate limiting
server {
    listen 8080;
    
    location /api/ {
        limit_req zone=api burst=20 nodelay;
        proxy_pass http://backend;
    }
    
    location /login {
        limit_req zone=login burst=5;
        proxy_pass http://backend;
    }
}